#define Gradius 1

#include "segment.h"
#include "fvi.h"
#include "vecmat.h"
#include "pstypes.h"

#define PLAYER_SHIP_HITBOX 175000

#define CAMERA_Z_OFFSET 1500000
#define CAMERA_SCROLL_RATE 1
#define CAMERA_MIN_DISTANCE	8029187
#define CAMERA_MAX_DISTANCE 13291870

#define CAMERA_ZOOM_RATE 100

#define MAX_LEVEL_SCROLL_RATE 50

#define BACK_WALL_BASE_SPEED 945
#define BACK_WALL_KILLZONE_OFFSET 800000

#define use_lives 0

void gradius_init();
void gradius_frame();
void gradius_remove_all_sideways_movement();

vms_matrix forward_orient;
vms_matrix backward_orient;

fix x_pos;
fix master_cam;
fix pc_0;
fix pc_1;
fix pc_2;
fix pc_3;
fix master_cam;

int level_scroll_rate;

vms_vector master_cam_pos;
vms_vector master_cam_pos_paused;
vms_vector highest_master_cam_pos;

void do_camera_frame();

fix c2p_dist;
fix last_c2p_dist;
fix c2p_z;
float c2p_z_scale;
fix camera_speed;
void reset_master_camera();
void init_master_camera();
void init_sub_cameras();
void reset_camera_zoom();
void reset_camera_position();
void stop_camera_movement(ubyte state);
void start_camera_movement();
void change_camera_state(ubyte state);
void change_camera_speed(int var);

int camera_state;
int last_camera_state;
int level_camera_state_default;
int level_camera_speed_default;
int last_camera_speed;

#define CAM_PLAYER	0	// camera is following player
#define CAM_MOVING 	1	// camera is moving on it's own
#define CAM_PAUSED 	2	// camera is not moving (game is paused)
#define CAM_DEAD		3	// camera is not moving (player is dead)
#define CAM_DEFAULT 4 // camera is level default

#define BACK_WALL_CAMERA		F1_0 * 100
#define FRONT_WALL_CAMERA	F1_0 * 100
#define BACK_WALL 						F1_0 * 90
#define FRONT_WALL 						F1_0 * 50

fix back_wall;
fix front_wall;

#define CATCH_UP_SCALE	16
#define ROBOT_KILLZONE		100000

vms_vector wn_0;
void do_wall_damage(object *obj, short hitseg, short hitside, vms_vector *hitpt);

void fuelcen_check_for_gradius_special (segment *segp);

ubyte in_lava;
ubyte in_water;
ubyte can_be_crushed;

void set_default_orientation();
void init_spawns();

void send_add_life();
void do_add_life();
void send_subtract_life();
void do_subtract_life();

void do_no_lives_message();
void do_lives_count(char * buf);

void init_brushes();

#define INITIAL_LIVES_COOP 10